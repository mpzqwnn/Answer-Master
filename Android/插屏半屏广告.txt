插屏半屏广告
简介
插屏半屏广告是移动广告的一种常见形式，在应用开流程中弹出，当应用展示插页式广告时，用户可以选择点按广告，访问其目标网址，也可以将其关闭，返回应用（注：插屏半屏广告接入需要在开发者平台创建插屏广告，可选择横版插屏和横/竖版插屏）。

适用场景：在应用执行流程的自然停顿点，适合投放这类广告。

分类：插屏半屏广告包含小规格纯图片（弹窗）和大规格纯图片（竖屏）、插屏横屏视频、插屏竖屏视频，具体种类可以在开发者平台进行选择。

小规格纯图片（弹窗）
大规格纯图片（竖屏）
interstitial_fullscreen_landscape.png	interstitial_fullscreen_portrait.png
插屏横屏视频
插屏竖屏视频
interstitialVideo_landscape.gif	interstitialVideo_portrait.gif
接口示例
com.qq.e.ads.interstitial2.UnifiedInterstitialAD：插屏半屏广告入口，用于初始化并加载广告数据。
方法名	方法介绍
UnifiedInterstitialAD(final Activity activity, final String posID,final UnifiedInterstitialADListener listener)	构造函数
loadAD()	加载插屏半屏广告
show()	展示插屏半屏广告，有遮罩(展示使用loadAD()加载的广告)
getECPMLevel()	获取本条广告实时的eCMP价格层级标签，每个层级标签对应线下预定的eCPM价格范围，成功返回一个包含数字的字符串，比如“1”，无权限调用该接口或后台异常会返回空字符串
getECPM()	获取本条广告实时的eCPM价格，单位是分
isValid()	广告是否有效，无效广告将无法展示
close()	关闭插屏半屏广告
destroy()	当不需要插屏半屏广告实例时调用此方法来主动释放资源
getAdPatternType()	获取广告样式，目前只支持AdPatternType.NATIVE_VIDEO
setMediaListener(UnifiedInterstitialMediaListener listener)	设置监听器，监听视频广告的状态变化
setVideoOption(VideoOption option)	**（可选方法）**指定视频广告的播放配置，配置包含：
1. autoPlayPolicy，指定不同网络下的视频播放策略，可选项包括：AutoPlayPolicy.WIFI（WiFi 网络自动播放，4G 网络手动点击播放），AutoPlayPolicy.ALWAYS（WiFi 和4G 网络都自动播放），默认值为 AutoPlayPolicy.ALWAYS。
2. autoPlayMuted，指定视频自动播放时是否静音，可选项包括：true（自动播放时静音），false（自动播放时有声），默认值为 true。
注：AutoPlayPolicy.ALWAYS 的配置能够一定程度优化广告收益
3. detailPageMuted，指定视频详情页是否静音播放，可选项包括：true（视频详情页静音播放），false（视频详情页有声播放），默认值为 false。
setMinVideoDuration(int minVideoDuration)	设置返回视频广告的最小视频时长（闭区间，可单独设置），单位:秒 此设置会影响广告填充，请谨慎设置
setMaxVideoDuration(int maxVideoDuration)	设置返回视频广告的最大视频时长（闭区间，可单独设置），单位:秒，合法输入为：5<=maxVideoDuration<=61. 此设置会影响广告填充，请谨慎设置
getExtraInfo()	（4.410.1280新增）获取本条广告一些额外信息
com.qq.e.ads.interstitial2.UnifiedInterstitialADListener：插屏半屏广告加载、渲染、点击状态的回调。
方法名	方法介绍
onNoAD(AdError error)	广告加载或展示过程中出错，AdError中包含了错误码和错误描述，具体错误码内容可参考错误码部分
onADReceive()	插屏半屏广告加载完毕
onVideoCached()	插屏半屏视频广告，视频素材下载完成
onADOpened()	插屏半屏广告展开时回调
onADExposure()	插屏半屏广告曝光时回调
onADClicked()	插屏半屏广告点击时回调
onADClosed()	插屏半屏广告关闭时回调
onADLeftApplication()	插屏半屏广告点击离开应用时回调
onRenderSuccess()	插屏半屏广告渲染成功时回调，此回调后才可以调用 show 方法
onRenderFail()	插屏半屏广告渲染失败时回调
com.qq.e.ads.interstitial2.UnifiedInterstitialMediaListener：插屏半屏视频广告播放状态回调接口，专用于带有视频素材的广告对象
方法名	方法介绍
onVideoInit()	视频播放 View 初始化完成
onVideoLoading()	视频下载中
onVideoReady(long videoDuration)	视频播放器初始化完成，准备好可以播放了，videoDuration 是视频素材的时间长度，单位为 ms
onVideoStart()	视频开始播放
onVideoPause()	视频暂停
onVideoComplete()	视频播放结束，自然播放到达最后一帧时都会触发
onVideoError(AdError error)	视频播放时出现错误，error 对象包含了错误码和错误信息，错误码的详细内容可以参考右侧快捷导航中的「错误码」
onVideoPageOpen()	进入视频落地页
onVideoPageClose()	退出视频落地页
接入注意事项
插屏半屏广告同一条广告不能重复曝光（一次load只能show一次）

插屏半屏广告展示调用（show）必须在ui线程内调用

插屏半屏广告给开发者的回调（UnifiedInterstitialADListener）全部执行在主线程中（异步回调）

尽量复用广告实例，不要实例化过多的广告实例，当广告实例不再使用时务必调用destory方法进行资源释放

视频素材效果优化
如果插屏半屏广告位支持视频，会在新建广告位时在广告素材栏看到视频选项。需要注意以下几点：

按需进行视频广告播放的个性化配置。
需处理好Activity的运行时变更，由于视频广告可以跟随手机屏幕的方向旋转和全屏播放，请处理好 Activity 的运行时变更（最简单的方式就是在AndroidManifest 文件中给Activity，加上android:configChanges="keyboard|keyboardHidden|orientation|screenSize" 属性），不要让播放视频广告的 Activity 被销毁重建，具体代码可以参考 GDTUnionDemo。
如果广告位支持视频广告，强烈建议在拉取广告前，调用setVideoOption设置视频广告的播放策略，有助于提高eCPM
代码接入示例
创建广告对象
private UnifiedInterstitialAD getIAD() {
    if (this.iad != null) {
      iad.close();
      iad.destroy();
    }
    isRenderFail = false;
    String posId = getPosId();
    Log.d(TAG, "getIAD: BiddingToken " + mS2sBiddingToken);
    if (!posId.equals(currentPosId) || iad == null || !TextUtils.isEmpty(mS2sBiddingToken)) {
      if (!TextUtils.isEmpty(mS2sBiddingToken)) {
        iad = new UnifiedInterstitialAD(this, posId, this, null, mS2sBiddingToken);
      } else {
        iad = new UnifiedInterstitialAD(this, posId, this);
      }
      iad.setNegativeFeedbackListener(new NegativeFeedbackListener() {
        @Override
        public void onComplainSuccess() {
          Log.i(TAG, "onComplainSuccess");
        }
      });
      iad.setMediaListener(this);
      iad.setLoadAdParams(DemoUtil.getLoadAdParams("interstitial"));
      currentPosId = posId;
    }
    return iad;
  }
发起广告请求
protected void loadAd() {
    if (!TextUtils.isEmpty(mBackupPosId)) {
      posIdEdt.setText(mBackupPosId);
      mBackupPosId = null;
    }
    mLoadSuccess = false;
    iad = getIAD();
    setVideoOption();
    iad.loadAD();
  }
展示广告
public void onADReceive() {
    mLoadSuccess = true;
    ToastUtil.l("广告加载成功 ！ ");
    // onADReceive之后才可调用getECPM()
    Log.d(TAG, "onADReceive eCPMLevel = " + iad.getECPMLevel()+ ", ECPM: " + iad.getECPM()
        + ", videoduration=" + iad.getVideoDuration()
        + ", testExtraInfo:" + iad.getExtraInfo().get("mp")
        + ", request_id:" + iad.getExtraInfo().get("request_id"));
    if (DownloadConfirmHelper.USE_CUSTOM_DIALOG) {
      iad.setDownloadConfirmListener(DownloadConfirmHelper.DOWNLOAD_CONFIRM_LISTENER);
    }
    reportBiddingResult(iad);
    if(mIsLoadAndShow && DemoUtil.isAdValid(mLoadSuccess, iad != null && iad.isValid(), true) && !isRenderFail){
      mIsLoadAndShow = false;
      iad.show();
    }
  }